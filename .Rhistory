#clear workspace
rm(list=ls())
# call in data
# from downloads
data <- read.csv("Field Assay Counts - Sheet1.csv")
# view data
head(data)
#plot temp data
plot(data$Date, data$temp)
# clear workspace
rm(list = ls())
# read in the data
fdata <- read.csv("Field Assay Counts - Sheet1.csv")
# remove NAs
fdata <- remove.na(fdata)
# remove NAs
fdata <- na.omit(fdata)
# read in the data
fdata <- read.csv("Field Assay Counts - Sheet1.csv")
# Load required packages
library(googledrive)
library(skimr)
library(skimr)
install.packages("skimr")
# Load required packages
library(googledrive)
library(skimr)
library(lubridate)
library(tidyverse)
library(clm)
install.packages("CLME")
library(clm)
library(ordinal)
# Verify that tidyverse is up to date
tidyverse_update()
library(tidyverse)
View(fdata)
port_data<-fdata %>%
filter(ent_count >= 0)
length(port_data$ent_count)
# How many samples in the full dataset?
n_full <- fdata %>%
group_by(grass.nograss, site) %>%
summarise(n = n())
View(n_full)
# read in the data
fdata <- read.csv("Field Assay Counts - Sheet1.csv")
port_data<-fdata %>%
filter(ent_count >= 0)
length(port_data$ent_count)
# How many samples in the full dataset?
n_full <- fdata %>%
group_by(grass.nograss, site) %>%
summarise(n = n())
port_model <- ent_count ~ grass.nograss*site + date
# Fit a normal distribution
model_norm_port<-glm(formula = port_model, data=fdata)
port_model <- ent_count ~ grass.nograss*site + Date
# Fit a normal distribution
model_norm_port<-glm(formula = port_model, data=fdata)
summary(model_norm_port)
AIC(model_norm_port)
model_pois_port<-glm(formula = port_model, data=fdata, family="poisson")
summary(model_pois_port)
AIC(model_pois_port)
model_nbinom_port<-glm.nb(formula = port_model, data=fdata)
library(lubridate)
library(tidyverse)
library(clm)
install.packages("clm")
library(clm)
expt_port<-ggpredict(model_norm_port,c("grass.nograss", "site"))
library(devtools)
expt_port<-ggpredict(model_norm_port,c("grass.nograss", "site"))
install.packages("ggiraphExtra")
install.packages("ggiraphExtra")
expt_port<-ggpredict(model_norm_port,c("grass.nograss", "site"))
library(tidyverse)
# Load required packages
library(googledrive)
library(skimr)
library(lubridate)
library(tidyverse)
library(dbplyr)
library(tidyverse)
library(clm)
install.packages("clm")
install.packages("googledrive")
install.packages("googledrive")
library(ordinal)
# Verify that tidyverse is up to date
tidyverse_update()
# read in the data
fdata <- read.csv("Field Assay Counts - Sheet1.csv")
port_data<-fdata %>%
filter(ent_count >= 0)
length(port_data$ent_count)
# How many samples in the full dataset?
n_full <- fdata %>%
group_by(grass.nograss, site) %>%
summarise(n = n())
port_model <- ent_count ~ grass.nograss*site + Date
# Fit a normal distribution
model_norm_port<-glm(formula = port_model, data=fdata)
summary(model_norm_port)
AIC(model_norm_port)
model_pois_port<-glm(formula = port_model, data=fdata, family="poisson")
summary(model_pois_port)
AIC(model_pois_port)
# this step nor working, glm.nb() not recognized
model_nbinom_port<-glm.nb(formula = port_model, data=fdata)
summary(model_nbinom_port)
AIC(model_nbinom_port)
expt_port<-ggpredict(model_norm_port,c("grass.nograss", "site"))
detach("package:dplyr", unload = TRUE)
expt_port<-ggpredict(model_norm_port,c("grass.nograss", "site"))
library(clm)
install.packages("ggplot2")
expt_port<-ggpredict(model_norm_port,c("grass.nograss", "site"))
expt_port<-ggPredict(model_norm_port,c("grass.nograss", "site"))
install.packages("ggeffects")
expt_port<-ggpredict(model_norm_port,c("grass.nograss", "site"))
library(ggeffects)
library(ggplot2)
expt_port<-ggpredict(model_norm_port,c("grass.nograss", "site"))
View(n_full)
View(port_data)
portunion_plot<-ggplot(expt_port,aes(x,predicted,color=group),grouping=site,color=site)+
scale_color_manual(values=c("#0571b0","#ca0020"))+
geom_point(size=4)+
geom_errorbar(data=expt_port,mapping=aes(x=x,ymin=conf.low,ymax=conf.high),width=0.03)+
geom_line(aes(group=group))+
xlab("")+
ylab(expression(paste("predicted abundance of ",italic("P. conformis"))))+
theme_minimal()+
theme(plot.title=element_text(size=14,hjust=0.5,face="plain"),axis.text.y=element_text(size=10),axis.title.y=element_text(size=9),axis.text.x=element_text(size=14),axis.title.x=element_text(size=10),panel.background=element_rect(fill="white",color="black"),panel.grid.major=element_line(color="grey95"),panel.grid.minor=element_line(color=NA),plot.margin=unit(c(0,0,0,0),"cm"))+
scale_x_discrete(limits=rev(levels(expt_port$x)),labels=c("fresh","frozen"))+
theme(legend.position="none")
portunion_plot
portunion_plot<-ggplot(expt_port,aes(x,predicted,color=group),grouping=site,color=site)
# scale_color_manual(values=c("#0571b0","#ca0020"))+
# geom_point(size=4)+
# geom_errorbar(data=expt_port,mapping=aes(x=x,ymin=conf.low,ymax=conf.high),width=0.03)+
# geom_line(aes(group=group))+
# xlab("")+
#ylab(expression(paste("predicted abundance of ",italic("P. conformis"))))+
# theme_minimal()+
# theme(plot.title=element_text(size=14,hjust=0.5,face="plain"),axis.text.y=element_text(size=10),axis.title.y=element_text(size=9),axis.text.x=element_text(size=14),axis.title.x=element_text(size=10),panel.background=element_rect(fill="white",color="black"),panel.grid.major=element_line(color="grey95"),panel.grid.minor=element_line(color=NA),plot.margin=unit(c(0,0,0,0),"cm"))+
# scale_x_discrete(limits=rev(levels(expt_port$x)),labels=c("grass","no grass"))+
# theme(legend.position="none")
portunion_plot
port_model <- ent_count ~ grass.nograss*site
# Fit a normal distribution
model_norm_port<-glm(formula = port_model, data=fdata)
summary(model_norm_port)
AIC(model_norm_port)
model_pois_port<-glm(formula = port_model, data=fdata, family="poisson")
summary(model_pois_port)
AIC(model_pois_port)
expt_port<-ggpredict(model_norm_port,c("grass.nograss", "site"))
portunion_plot<-ggplot(expt_port,aes(x,predicted,color=group),grouping=site,color=site)
# scale_color_manual(values=c("#0571b0","#ca0020"))+
# geom_point(size=4)+
# geom_errorbar(data=expt_port,mapping=aes(x=x,ymin=conf.low,ymax=conf.high),width=0.03)+
# geom_line(aes(group=group))+
# xlab("")+
#ylab(expression(paste("predicted abundance of ",italic("P. conformis"))))+
# theme_minimal()+
# theme(plot.title=element_text(size=14,hjust=0.5,face="plain"),axis.text.y=element_text(size=10),axis.title.y=element_text(size=9),axis.text.x=element_text(size=14),axis.title.x=element_text(size=10),panel.background=element_rect(fill="white",color="black"),panel.grid.major=element_line(color="grey95"),panel.grid.minor=element_line(color=NA),plot.margin=unit(c(0,0,0,0),"cm"))+
# scale_x_discrete(limits=rev(levels(expt_port$x)),labels=c("grass","no grass"))+
# theme(legend.position="none")
portunion_plot
View(expt_port)
View(expt_port)
portunion_plot<-ggplot(expt_port,aes(as.factor(x),predicted,color=group),grouping=site,color=site)
portunion_plot<-ggplot(expt_port,aes(as.factor(x),predicted,color=group),grouping=site,color=site) +
geom_point()
portunion_plot<-ggplot(expt_port,aes(as.factor(x),predicted,color=group),
grouping=group,color=group) +
geom_point()
portunion_plot
portunion_plot<-ggplot(expt_port,aes(as.factor(x),predicted,color=group ),
grouping=group,color=group) +
geom_point()
portunion_plot
portunion_plot<-ggplot(expt_port,aes(as.factor(x),predicted,color=group ),
grouping=group,color=group) + scale_color_manual(values=c("#0571b0","#ca0020"))+
geom_point(size=4)+
geom_errorbar(data=expt_port,mapping=aes(x=x,ymin=conf.low,ymax=conf.high),width=0.03)+
geom_line(aes(group=group))+
xlab("")+
ylab(expression(paste("predicted abundance of ",italic("P. conformis"))))+
theme_minimal()+
theme(plot.title=element_text(size=14,hjust=0.5,face="plain"),axis.text.y=element_text(size=10),axis.title.y=element_text(size=9),axis.text.x=element_text(size=14),axis.title.x=element_text(size=10),panel.background=element_rect(fill="white",color="black"),panel.grid.major=element_line(color="grey95"),panel.grid.minor=element_line(color=NA),plot.margin=unit(c(0,0,0,0),"cm"))+
scale_x_discrete(limits=rev(levels(expt_port$x)),labels=c("grass","no grass"))+
theme(legend.position="none")
portunion_plot
portunion_plot<-ggplot(expt_port,aes(as.factor(x),predicted,color=group ),
grouping=group,color=group) + scale_color_manual(values=c("#0571b0","#ca0020"))+
geom_point(size=4)+
geom_errorbar(data=expt_port,mapping=aes(x=x,ymin=conf.low,ymax=conf.high),width=0.03)+
geom_line(aes(group=group))+
xlab("")#
#ylab(expression(paste("predicted abundance of ",italic("P. conformis"))))+
#theme_minimal()+
#theme(plot.title=element_text(size=14,hjust=0.5,face="plain"),axis.text.y=element_text(size=10),axis.title.y=element_text(size=9),axis.text.x=element_text(size=14),axis.title.x=element_text(size=10),panel.background=element_rect(fill="white",color="black"),panel.grid.major=element_line(color="grey95"),panel.grid.minor=element_line(color=NA),plot.margin=unit(c(0,0,0,0),"cm"))+
#scale_x_discrete(limits=rev(levels(expt_port$x)),labels=c("grass","no grass"))+
#theme(legend.position="none")
portunion_plot
portunion_plot<-ggplot(expt_port,aes(as.factor(x),predicted,color=group ),
grouping=group,color=group) + geom_point(size=4) +
geom_errorbar(data=expt_port,mapping=aes(x=x,ymin=conf.low,ymax=conf.high),width=0.03)+
geom_line(aes(group=group))+
xlab("")#
#ylab(expression(paste("predicted abundance of ",italic("P. conformis"))))+
#theme_minimal()+
#theme(plot.title=element_text(size=14,hjust=0.5,face="plain"),axis.text.y=element_text(size=10),axis.title.y=element_text(size=9),axis.text.x=element_text(size=14),axis.title.x=element_text(size=10),panel.background=element_rect(fill="white",color="black"),panel.grid.major=element_line(color="grey95"),panel.grid.minor=element_line(color=NA),plot.margin=unit(c(0,0,0,0),"cm"))+
#scale_x_discrete(limits=rev(levels(expt_port$x)),labels=c("grass","no grass"))+
#theme(legend.position="none")
portunion_plot
port_model <- ent_count ~ grass.nograss*site + Date
# Fit a normal distribution
model_norm_port<-glm(formula = port_model, data=fdata)
summary(model_norm_port)
AIC(model_norm_port)
expt_port<-ggpredict(model_norm_port,c("grass.nograss", "site"))
portunion_plot<-ggplot(expt_port,aes(as.factor(x),predicted,color=group ),
grouping=group,color=group) + geom_point(size=4) +
geom_errorbar(data=expt_port,mapping=aes(x=x,ymin=conf.low,ymax=conf.high),width=0.03)+
geom_line(aes(group=group))+
xlab("")#
#ylab(expression(paste("predicted abundance of ",italic("P. conformis"))))+
#theme_minimal()+
#theme(plot.title=element_text(size=14,hjust=0.5,face="plain"),axis.text.y=element_text(size=10),axis.title.y=element_text(size=9),axis.text.x=element_text(size=14),axis.title.x=element_text(size=10),panel.background=element_rect(fill="white",color="black"),panel.grid.major=element_line(color="grey95"),panel.grid.minor=element_line(color=NA),plot.margin=unit(c(0,0,0,0),"cm"))+
#scale_x_discrete(limits=rev(levels(expt_port$x)),labels=c("grass","no grass"))+
#theme(legend.position="none")
portunion_plot
