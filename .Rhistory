# clear workspace
rm(list =ls())
## load packages
require(foreign)
require(ggplot2)
require(MASS)
require(lme4)
# load data
dat <- read.csv("Field Assay Counts - Sheet1.csv")
setwd("~/Documents/GitHub/Stats")
# load data
dat <- read.csv("Field Assay Counts - Sheet1.csv")
# clean up data
#remove discovery field site
dat <- dat[dat$site != "Disc",]
# remove geom mean, notes columns
dat <- dat[-c(15,16, 17,18)]
# remove sample
dat <- dat[,-12]
#see data
summary(dat)
# make date julian day
library(lubridate)
# convert "date" from chr to a Date class and specify current date format
dat$Date<- as.Date(dat$Date, "%m/%d/%y")
# convert with yday into a new column "julian"
dat$julian <- yday(dat$Date)
# make sure it worked all the way through.
head(dat$julian)
tail(dat$julian)
# model
m.glm <- glm.nb(ent_count ~ grass.nograss + dist.from.shore + do,
data=dat, trace=TRUE)
summary(m.glm)
ent.nb1 <- glm.nb(ent_count ~ grass.nograss + dist.from.shore + do,
data=dat, trace = TRUE) ## best model lowest AIC
ent.nb2 <- update(ent.nb1, ent_count ~ grass.nograss + dist.from.shore + do + dist.from.shore*do)
ent.nb3 <- update(ent.nb2, ent_count ~ grass.nograss + dist.from.shore)
anova(ent.nb1, ent.nb2, ent.nb3)
dat$dist.from.shore<-scale(dat$dist.from.shore)
dat$do<-scale(dat$do)
dat$grass.nograss<- scale(dat$grass.nograss)
# add in random effects (date and site)
m.nb <- glmer.nb(ent_count ~ grass.nograss + dist.from.shore + do + (1|julian) + (1|site),
data=dat, verbose=TRUE)
m.nb
#plotting predicted values
plot(m.nb)
summary(m.nb)
# remove nas
dat <- na.omit(dat)
##### visualize results
summ(m.nb)
m.nb
# ----------------------------------
#
#   Grouping variables:
#   --------------------------
#   Group    # groups   ICC
# -------- ---------- ------
#   julian      17      0.25
# site       3       0.12
# --------------------------
# explore the impact of dist from shore on ent abundance
effect_plot(m.nb, pred = dist.from.shore)
require(MASS)
require(lme4)
##### visualize results
summ(m.nb)
# ----------------------------------
#
#   Grouping variables:
#   --------------------------
#   Group    # groups   ICC
# -------- ---------- ------
#   julian      17      0.25
# site       3       0.12
# --------------------------
# explore the impact of dist from shore on ent abundance
effect_plot(m.nb, pred = dist.from.shore)
# plot
library(effects)
plot(allEffects(m.nb))
plot(allEffects(m.nb), ylab = "Enterococcus (CFUs/100ml)")
plot(m.nb, which=c(1,5))
m.nb2 <- allEffects(m.nb)
plot(m.nb2[4], x.var="dist.from.shore", multiline=TRUE, ci.style="bands", ...)
plot(.mnb2[4], multiline=TRUE, ci.style="bands", ...)
# plot predictors
ent_plot <- ggplot(dat,
aes(x = dist.from.shore, y = ent_count )) +
geom_point()
ent_plot
# plot residuals
library(tidyverse)
library(readr)
library(readxl)
# make plot - fits well!
m.nb_res <- simulateResiduals(m.nb)
library(readr)
install.packages("readr")
library(readxl)
install.packages("readxl")
# make plot - fits well!
m.nb_res <- simulateResiduals(m.nb)
library(MASS)
library(lme4)
library(foreign)
# make plot - fits well!
m.nb_res <- simulateResiduals(m.nb)
plot(m.nb_res)
## Unformatted plot of effect sizes
sjPlot::plot_model(m.nb)
sjPlot::plot_model(m.nb,
axis.labels=c("Dissolved Oxygen (Mg/L)", "Distance from shore (m)",
"Seagrass"),
show.values=TRUE, show.p=TRUE,
title= "Field effects on Enterococcus Abundance")
# unformatted table
sjPlot:: tab_model(m.nb)
# Formatted table
sjPlot::tab_model(m.nb,
show.re.var= TRUE,
pred.labels =c("(Intercept)", "Z. marina", "Distance from shore (m)",
"Dissolved oxygen (Mg/L)"),
dv.labels= "Field effects on Enterococcus Abundance")
effects_m.nb <- effects::effect(term= "dist.from.shore", mod= m.nb)
summary(effects_m.nb) #output of what the values are
# Save the effects values as a df:
x_m.nb <- as.data.frame(effects_m.nb)
# Step 2: Use the effects value df (created above) to plot the estimates
#1
m.nb_plot <- ggplot() +
#2
geom_point(data=dat, aes(dist.from.shore, ent_count)) +
#3
geom_point(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#4
geom_line(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#5
geom_ribbon(data= x_m.nb, aes(x=dist.from.shore, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="Distance from Shore (m)", y="Enterococcus (CFUs/100ml)")
library(ggplot2)
# Step 2: Use the effects value df (created above) to plot the estimates
#1
m.nb_plot <- ggplot() +
#2
geom_point(data=dat, aes(dist.from.shore, ent_count)) +
#3
geom_point(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#4
geom_line(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#5
geom_ribbon(data= x_m.nb, aes(x=dist.from.shore, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="Distance from Shore (m)", y="Enterococcus (CFUs/100ml)")
m.nb_plot + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
x_m.nb
x_m.nb$dist.from.shore <- c(0,20,40,60,80,100)
x_m.nb$dist.from.shore <- c(20,40,60,80,100)
# Step 2: Use the effects value df (created above) to plot the estimates
#1
m.nb_plot <- ggplot() +
#2
geom_point(data=dat, aes(dist.from.shore, ent_count)) +
#3
geom_point(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#4
geom_line(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#5
geom_ribbon(data= x_m.nb, aes(x=dist.from.shore, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="Distance from Shore (m)", y="Enterococcus (CFUs/100ml)")
m.nb_plot + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
x_m.nb
View(dat)
# Save the effects values as a df:
x_m.nb <- as.data.frame(effects_m.nb)
x_m.nb$dist.from.shore <- c(0,25,50,75,100)
# Step 2: Use the effects value df (created above) to plot the estimates
#1
m.nb_plot <- ggplot() +
#2
geom_point(data=dat, aes(dist.from.shore, ent_count)) +
#3
geom_point(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#4
geom_line(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#5
geom_ribbon(data= x_m.nb, aes(x=dist.from.shore, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="Distance from Shore (m)", y="Enterococcus (CFUs/100ml)")
m.nb_plot + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
effects_m.nb <- effects::effect(term= "dist.from.shore", mod= m.nb)
summary(effects_m.nb) #output of what the values are
m.nb_plot <- ggplot() +
#2
geom_point(data=dat, aes(dist.from.shore, ent_count))
ggplot() +
#2
geom_point(data=dat, aes(dist.from.shore, ent_count))
# Step 2: Use the effects value df (created above) to plot the estimates
#1
m.nb_plot <- ggplot() +
#2
geom_point(data=dat, aes(dist.from.shore, ent_count)) +
#3
geom_point(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#4
geom_line(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#5
geom_ribbon(data= x_m.nb, aes(x=dist.from.shore, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="Distance from Shore (m)", y="Enterococcus (CFUs/100ml)")
m.nb_plot
# load data
dat <- read.csv("Field Assay Counts - Sheet1.csv")
# clean up data
#remove discovery field site
dat <- dat[dat$site != "Disc",]
# remove geom mean, notes columns
dat <- dat[-c(15,16, 17,18)]
# remove sample
dat <- dat[,-12]
# Step 2: Use the effects value df (created above) to plot the estimates
#1
m.nb_plot <- ggplot() +
#2
geom_point(data=dat, aes(dist.from.shore, ent_count)) +
#3
geom_point(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#4
geom_line(data=x_m.nb, aes(x=dist.from.shore, y=fit), color="blue") +
#5
geom_ribbon(data= x_m.nb, aes(x=dist.from.shore, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="Distance from Shore (m)", y="Enterococcus (CFUs/100ml)")
m.nb_plot + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
m.nb_plot + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(text = element_text(size = 14))
## Unformatted plot of effect sizes
sjPlot::plot_model(m.nb)
sjPlot::plot_model(m.nb,
axis.labels=c("Dissolved Oxygen (Mg/L)", "Distance from shore (m)",
"Seagrass"),
show.values=TRUE, show.p=TRUE,
title= "Field effects on Enterococcus Abundance")
sjPlot::plot_model(m.nb,
axis.labels=c("Dissolved Oxygen (Mg/L)", "Distance from shore (m)",
"Seagrass"),
show.values=TRUE, show.p=TRUE,
title= "Field effects on Enterococcus Abundance",
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(text = element_text(size = 14)))
sjPlot::plot_model(m.nb,
axis.labels=c("Dissolved Oxygen (Mg/L)", "Distance from shore (m)",
"Seagrass"),
show.values=TRUE, show.p=TRUE,
title= "Field effects on Enterococcus Abundance") +
theme(panel.grid = element_blank())
b <-sjPlot::plot_model(m.nb,
axis.labels=c("Dissolved Oxygen (Mg/L)", "Distance from shore (m)",
"Seagrass"),
show.values=TRUE, show.p=TRUE,
title= "Field effects on Enterococcus Abundance") +
theme(panel.grid = element_blank())
a <- m.nb_plot + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
theme(text = element_text(size = 14))
#combine plots
figure <- ggarrange(a + b,
labels = c("A", "B"),
ncol = 2, nrow = 3)
# packages
install.packages("ggpubr")
library(ggpubr)
#combine plots
figure <- ggarrange(a + b,
labels = c("A", "B"),
ncol = 2, nrow = 3)
#combine plots
figure <- ggarrange(a, b,
labels = c("A", "B"),
ncol = 2, nrow = 3)
figure
#combine plots
figure <- ggarrange(a, b,
labels = c("A", "B"),
ncol = 2, nrow = 1)
figure
b <-sjPlot::plot_model(m.nb,
axis.labels=c("Dissolved Oxygen (Mg/L)", "Distance from shore (m)",
"Seagrass"),
show.values=TRUE, show.p=TRUE,
title= "Field effects on Enterococcus") +
theme(panel.grid = element_blank())
#combine plots
figure <- ggarrange(a, b,
labels = c("A", "B"),
ncol = 2, nrow = 1)
figure
